version: '3.9'
services:
  app:
    container_name: golang_container
    environment:
      - DB_DRIVER=${DB_DRIVER}
      - DB_SOURCE=${DB_SOURCE}
      - DB_SOURCE_TEST=${DB_SOURCE_TEST}
      - SERVER_ADDRESS=${SERVER_ADDRESS}
      - TOKEN_KEY=${TOKEN_KEY}
      - TOKEN_KEY_TEST=${TOKEN_KEY_TEST}
      - ACCESS_TOKEN_DURATION=${ACCESS_TOKEN_DURATION}
      - ACCESS_TOKEN_DURATION_TEST=${ACCESS_TOKEN_DURATION_TEST}
      - CLIENT_URL=${CLIENT_URL}
      - PASSWORD_RESER_TOKEN_DURATION=${PASSWORD_RESER_TOKEN_DURATION}
      - PASSWORD_RESER_TOKEN_DURATION_TEST=${PASSWORD_RESER_TOKEN_DURATION_TEST}
      - NO_REPLY_EMAIL=${NO_REPLY_EMAIL}
      - NO_REPLY_PASSWORD=${NO_REPLY_PASSWORD}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
    tty: true
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8000:8080
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - postgresdb
    networks:
      - learning
    network_mode: host

  postgresdb:
    image: postgres:latest
    container_name: postgres_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - '5434:5432'
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - learning

#   postgresdb_test:
#     image: postgres:latest
#     container_name: postgres_test_container
#     environment:
#       - POSTGRES_USER=${TEST_DB_USER}
#       - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
#       - POSTGRES_DB=${TEST_DB_NAME}
#       - DATABASE_HOST=${TEST_DB_HOST}
#     ports:
#       - '4568:5432'
#     volumes:
#       - ./pg_data_test:/var/lib/postgresql/data
#     networks:
#       - learning

volumes:
  pg_data:
#   pg_data_test:

    # Networks to be created to facilitate communication between containers
networks:
  learning:
    driver: bridge
